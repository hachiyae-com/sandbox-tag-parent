name: update pull request
on:
  pull_request:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-commit:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    outputs:
      sha: ${{steps.commit.outputs.sha}}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: update git commit
        shell: bash
        id: commit
        run: |
          echo "test\n" >> .github/test.md
          git add .github/test.md
          git config --local user.name "Eiji Hachiya"
          git config --local user.email "hachiyae@gmail.com"
          git remote set-url origin "https://${GITHUB_AUTHOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git commit -m "chore: update"
          git push -u origin HEAD:${{github.event.pull_request.head.ref}}
          git rev-parse HEAD
          echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
  re-run-review1:
    runs-on: ubuntu-latest
    needs: [update-commit]
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    outputs:
      conclusion: ${{ steps.review.outputs.conclusion_reivew1 }}
    steps:
      - uses: actions/checkout@v4
      - name: re-run review
        shell: bash
        id: review
        run: |
          gh workflow run test.yml --ref ${{github.head_ref}}
          RUN_ID=$(gh run list --workflow=test.yml -b ${{github.head_ref}} -e workflow_dispatch --json number,status,conclusion,databaseId --jq '. | max_by(.number).databaseId')
          gh run watch ${RUN_ID}
          conclusion=$(gh run list --workflow=test2.yml -b test-hoge -e workflow_dispatch --json number,status,conclusion,databaseId --jq ".[] | select(.databaseId == ${RUN_ID}).conclusion")
          echo "conclusion_reivew1=${conclusion}" >> "$GITHUB_OUTPUT"
  re-run-review2:
    runs-on: ubuntu-latest
    needs: [update-commit]
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    outputs:
      conclusion: ${{ steps.review2.outputs.conclusion_reivew2 }}
    steps:
      - uses: actions/checkout@v4
      - name: re-run review2
        shell: bash
        id: review2
        run: |
          gh workflow run test2.yml --ref ${{github.head_ref}}
          RUN_ID=$(gh run list --workflow=test2.yml -b ${{github.head_ref}} -e workflow_dispatch --json number,status,conclusion,databaseId --jq '. | max_by(.number).databaseId')          
          gh run watch $RUN_ID
          conclusion=$(gh run list --workflow=test2.yml -b test-hoge -e workflow_dispatch --json number,status,conclusion,databaseId --jq ".[] | select(.databaseId == $RUN_ID).conclusion")
          echo "conclusion_reivew2=${conclusion}" >> "$GITHUB_OUTPUT"
  update-status-review1:  
    runs-on: ubuntu-latest
    needs: [re-run-review1]
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: update status
        shell: bash
        run: |
          STATUS=${{needs.re-run-review1.outputs.conclusion}}
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ needs.update-commit.outputs.sha }} \
           -f "state=${STATUS}" -f "context=review2"
  update-status-review2:
    runs-on: ubuntu-latest
    needs: [re-run-review2]
    env:
      GITHUB_TOKEN: ${{ secrets.PAT }}
    steps:
      - name: update status
        shell: bash
        run: |
          STATUS=${{needs.re-run-review2.outputs.conclusion}}
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/statuses/${{ needs.update-commit.outputs.sha }} \
           -f "state=${STATUS}" -f "context=review2"
